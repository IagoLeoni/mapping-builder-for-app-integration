# Cloud Build configuration for deploying Application Integration using IntegrationCLI
# This build file is triggered by the CloudBuildService when deploying integrations
# CORRIGIDO: Usar imagem Docker oficial do IntegrationCLI v0.79.0

steps:
  # Step 1: Download integration configuration from Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - 'cp'
      - 'gs://${_BUCKET_NAME}/${_CONFIG_PATH}'
      - '/workspace/integration.json'
    id: 'download-config'

  # Step 2: Verify download and create upload format using Python
  - name: 'python:3.9-slim'
    entrypoint: 'python'
    args:
      - '-c'
      - |
        import json
        import sys
        
        print("üîç Validating integration JSON...")
        
        try:
            # Read the integration JSON
            with open('/workspace/integration.json', 'r') as f:
                integration_data = json.load(f)
            
            print("‚úÖ JSON validation passed")
            
            # Show integration name if available
            integration_name = integration_data.get('name', integration_data.get('displayName', 'unnamed-integration'))
            print(f"üìã Integration: {integration_name}")
            
            # Create upload format wrapper
            upload_data = {
                'content': json.dumps(integration_data),
                'fileFormat': 'JSON'
            }
            
            # Write upload format
            with open('/workspace/upload.json', 'w') as f:
                json.dump(upload_data, f)
            
            print("‚úÖ Upload format created")
            
            # Show file size
            import os
            file_size = os.path.getsize('/workspace/upload.json')
            print(f"üìÑ Upload file size: {file_size} bytes")

        except json.JSONDecodeError as e:
            print(f"‚ùå Invalid JSON configuration: {e}")
            sys.exit(1)
        except Exception as e:
            print(f"‚ùå Error processing JSON: {e}")
            sys.exit(1)
    id: 'validate-config'
    waitFor: ['download-config']

  # Step 3: Skip CLI validation (not supported in this version) - rely on JSON validation
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîß Note: IntegrationCLI v0.79.0 does not support validate command"
        echo "‚úÖ Proceeding with JSON validation already completed"
        echo "üìã Integration ready for deployment"
    id: 'cli-validate'
    waitFor: ['validate-config']

  # Step 4: Deploy integration with IntegrationCLI using official Docker image (correct format)
  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:v0.79.0'
    args:
      - 'integrations'
      - 'upload'
      - '--name'
      - '${_INTEGRATION_NAME}'
      - '--file'
      - '/workspace/upload.json'
      - '--proj'
      - '${PROJECT_ID}'
      - '--reg'
      - '${_REGION}'
      - '--default-token'
    id: 'deploy-integration'
    waitFor: ['cli-validate']

  # Step 5: Wait and verify integration exists before publishing
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "‚è≥ Waiting for integration to be available..."
        sleep 5
        echo "üîç Checking if integration ${_INTEGRATION_NAME} exists..."
        echo "üìã Project: ${PROJECT_ID}, Region: ${_REGION}"
    id: 'wait-for-integration'
    waitFor: ['deploy-integration']

  # Step 6: List integrations to verify creation
  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:v0.79.0'
    args:
      - 'integrations'
      - 'list'
      - '--proj'
      - '${PROJECT_ID}'
      - '--reg'
      - '${_REGION}'
      - '--default-token'
    id: 'verify-integration-exists'
    waitFor: ['wait-for-integration']

  # Step 7: Publish integration to make it live (not draft) 
  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:v0.79.0'
    args:
      - 'integrations'
      - 'versions'
      - 'publish'
      - '--name'
      - '${_INTEGRATION_NAME}'
      - '--snapshot'
      - '1'
      - '--latest=false'
      - '--proj'
      - '${PROJECT_ID}'
      - '--reg'
      - '${_REGION}'
      - '--default-token'
    id: 'publish-integration'
    waitFor: ['verify-integration-exists']

  # Step 6: Verify deployment using official Docker image
  - name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:v0.79.0'
    args:
      - 'integrations'
      - 'list'
      - '--proj'
      - '${PROJECT_ID}'
      - '--reg'
      - '${_REGION}'
      - '--default-token'
    id: 'verify-deployment'
    waitFor: ['publish-integration']

  # Step 7: Output deployment success information
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "‚úÖ Integration deployed and published successfully"
        echo "üéâ Integration ${_INTEGRATION_NAME} is ready to receive webhooks!"
        echo ""
        echo "üìä Deployment Summary:"
        echo "  üìã Integration Name: ${_INTEGRATION_NAME}"
        echo "  üìç Project: ${PROJECT_ID}"
        echo "  üåç Region: ${_REGION}"
        echo ""
        echo "üîó Integration Console: https://console.cloud.google.com/integrations/integration/${_INTEGRATION_NAME}?project=${PROJECT_ID}"
        echo "üîó Webhook URL: https://integrations.googleapis.com/v1/projects/${PROJECT_ID}/locations/${_REGION}/integrations/${_INTEGRATION_NAME}:execute"
        echo ""
        echo "üöÄ Integration is now live and ready to process webhooks from Gupy!"
    id: 'output-summary'
    waitFor: ['verify-deployment']

# Substitution variables (passed from CloudBuildService)
substitutions:
  _INTEGRATION_NAME: 'default-integration'
  _REGION: 'us-central1'
  _BUCKET_NAME: '${PROJECT_ID}-integration-configs'
  _CONFIG_PATH: 'default/integration.json'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_STANDARD_2'
  substitution_option: 'ALLOW_LOOSE'

# Timeout (20 minutes should be enough for most deployments)
timeout: '1200s'

# Tags for organizing builds
tags:
  - 'integration-deployment'
  - 'integrationcli'
  - 'application-integration'
